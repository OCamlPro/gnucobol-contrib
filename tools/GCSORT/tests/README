  ====================
  Tests case
  ====================
  --------------------
    Folder tests: 
  --------------------
        1) bin     - for executables
        2) cfg     - contains files for configuration environment
                        gctestset.cfg   - file with parameters used by gctestrun module
                                            Copy files
                                            Compile all programs
                                            Execute programs to generate files for tests
                        gctestset.def   - file definition of parameters for compilation via gnucobol
        3) copy    - copy cobol used by programs
        4) files   - files used by programs
        5) filesin - formatted files  
        6) listing - file listing produced by cobol compiler
        7) log     - used to redirect execution output
        8) script  - script linux/windows
                     compile         - used to compile setup module 
                     compile_single  - Use only when modify source cobol programs
        9) source  - source Cobol program
       10) takefile- gcsort file parameters
                        folder :
                            merge - files .prm with parameters for merge
                            sort  - files .prm with parameters for sort
                            tmp   - used by programs gctestrun (dinamically generations of parameters)
  --------------------
   Files in tests root
  --------------------
        pgm_naming_convention.txt - Naming convention used. List of cobol programs and features. 
        README                    - This file

  --------------------
   Step to run tests
  --------------------
        
        Requirements:  GnuCOBOL installed 
                       GCSORT   binary present in gcsort/tests/bin folder
                                or
                                add current path($PATH) gcsort folder
                                (Example : export PATH=$PATH:/home/<user>/gcsort)                                

     a. from gcsort/tests/script  
        
        Before execute tests run from tests folder: 
     b. sudo chmod  -R 775 *
     
     c. add current path($PATH) gcsort/tests/bin folder 
        (Example : export PATH=$PATH:/home/<user>/gcsort/tests/bin)                                
                
     d. Sequence to activate tests.
         Linux Environment
        1) execute     : ./compile.sh         ---> Linux Environment. compile gctestset Cobol program.
        2) change dir  : cd ../bin
        3) execute     : ./gctestset         ---> Linux Environment. execute setup (copy files, compile test program, run programs) 
        4) execute     : ./gctestrun          ---> execute all cases

         MinGW Environment
        1) execute     : ./compile_mingw.bat  ---> MinGW Environment. compile gctestset Cobol program.
        2) change dir  : cd ../bin
        3) execute     : ./gctestset         ---> MinGW Environment. execute setup (copy files, compile test program, run programs) 
        4) execute     : ./gctestrun          ---> execute all cases

         Windows Environment
        1) execute     : compile.bat          ---> Windows Environment. compile gctestset Cobol program.
        2) change dir  : cd ..\bin
        3) execute     : gctestset           ---> Windows Environment. execute setup (copy files, compile test program, run programs)  
        4) execute     : gctestrun            ---> execute all cases

        If test is ok, program prints :
        *===============================================*
        ------------------------------------------------
        |   Test id      |      retcode     |  status  |
        ------------------------------------------------
        |   gctestrun1   |    +0000000000   |    OK    |
        |   gctestrun2   |    +0000000000   |    OK    |
        |   gctestrun3   |    +0000000000   |    OK    |
        |   gctestrun4   |    +0000000000   |    OK    |
        |   gctestrun5   |    +0000000000   |    OK    |
        |   gctestrun6   |    +0000000000   |    OK    |
        ------------------------------------------------
        =======================================
        =====   T E S T    P A S S E D    =====
        =======================================
        
        You can execute : 
            (Linux) ./gctestrun 1>../log/run_logout.txt 
            (MinGW) ./gctestrun 1>../log/run_logout.txt 
            (Windows) gctestrun 1>..\log\run_logout.txt 
        to redirect output message  into files.
        After the run, checks log files. 

        In the log file run_logerr.txt there will be the following lines :
        *GCSORT*W968* WARNING : Warning reading file ../files/sqbi03 - File Status (04) 
        *GCSORT*W680* WARNING : OUTFIL without FILES/FNAMES, forced GIVE definition ../files/fil_outfil_100_009.txt.srt
        *GCSORT*W680* WARNING : OUTFIL without FILES/FNAMES, forced GIVE definition ../files/fil_outfil_100_009.txt.srt
        *GCSORT*W680* WARNING : OUTFIL without FILES/FNAMES, forced GIVE definition ../files/fil_outfil_100_08a.txt.srt
        *GCSORT*W680* WARNING : OUTFIL without FILES/FNAMES, forced GIVE definition ../files/fil_outfil_100_10a.txt.srt
        *GCSORT*W680* WARNING : OUTFIL without FILES/FNAMES, forced GIVE definition ../files/fil_outfil_001_012.txt
        *GCSORT*W680* WARNING : OUTFIL without FILES/FNAMES, forced GIVE definition ../files/fil_outfil_001_014.txt
        *GCSORT*W680* WARNING : OUTFIL without FILES/FNAMES, forced GIVE definition ../files/fil_outfil_001_015.txt        
        
        These are warnings and not errors.
        